/* FILE: /assets/css/custom.css */

/*
 * ===============================================
 * Global Variables (Custom Properties)
 * ===============================================
 * Define your core brand and theme colors here.
 * This makes managing your site's color scheme much easier.
 */
:root {
    --brand-primary: #C60021;
    --brand-secondary: #6A008A;
    --dark-bg-start: #2D2D2D;
    --dark-bg-end: #1A1A1A;
    --dark-border: #444;
}

/*
 * ===============================================
 * Base & Global Styles
 * ===============================================
 */
body {
    font-family: 'Inter', sans-serif;
}

/*
 * ===============================================
 * Custom Component Styles
 * ===============================================
 * These are unique styles for custom components.
 */
.text-gradient {
    background: linear-gradient(to right, var(--brand-primary), var(--brand-secondary));
    -webkit-background-clip: text;
    background-clip: text; /* Standard property for future compatibility */
    -webkit-text-fill-color: transparent;
}

.nav-item-hover:hover {
    color: var(--brand-primary);
}

.bg-dark-gradient {
    background: linear-gradient(135deg, var(--dark-bg-start) 0%, var(--dark-bg-end) 100%);
}

.dropdown-menu-custom {
    background-color: var(--dark-bg-start);
    border-radius: 0.5rem;
    border: 1px solid var(--dark-border);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;
    transform-origin: top right;
}

.dropdown-item-custom {
    display: block;
    color: white;
    padding: 0.75rem 1rem;
    transition: background-color 0.2s;
    font-size: 0.875rem; /* 14px */
}

.dropdown-item-custom:hover {
    background-color: var(--dark-border);
}


/*
 * ===============================================
 * Tailwind CSS Component Abstractions (@apply)
 * ===============================================
 * NOTE: Modern Tailwind best practice favors using utility classes directly
 * in HTML over creating component classes with @apply. Consider this
 * for future development or during refactoring.
 */

/* --- Table Styling --- */
.table-th {
    @apply px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider;
}

.table-td {
    @apply px-6 py-4 whitespace-nowrap text-sm text-gray-800;
}

.table-row-hover {
    @apply transition-colors duration-150 ease-in-out;
}

.table-row-hover:hover {
    @apply bg-gray-100;
}

/* --- Button Styling --- */
.btn {
    @apply inline-block font-bold py-2 px-4 rounded-md text-sm text-white transition-colors duration-300 transform hover:scale-105 shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2;
}

.btn-primary {
    @apply bg-blue-600 hover:bg-black focus:ring-blue-500;
}

.btn-success {
    @apply bg-green-600 hover:bg-black focus:ring-green-500;
}

.btn-info {
    @apply bg-amber-500 hover:bg-black focus:ring-amber-400;
}

.btn-danger {
    @apply bg-red-600 hover:bg-black focus:ring-red-500;
}

/* --- Loading Spinner --- */
.spinner {
    @apply h-12 w-12 animate-spin rounded-full border-4 border-solid border-blue-600 border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite] mx-auto;
}